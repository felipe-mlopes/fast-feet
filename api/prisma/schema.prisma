generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  DELIVERYMAN
}

enum Status {
  WAITING
  PICKN_UP
  DONE
}

model User {
  id       String   @id @default(uuid())
  name     String
  cpf      String   @unique
  email    String   @unique
  password String
  role     UserRole @default(DELIVERYMAN)

  Order Order[]

  @@map("User")
}

model Order {
  id            String    @id @default(uuid())
  deliverymanId String?   @map("deliveryman_id")
  clientId      String    @map("client_id")
  title         String
  status        Status    @default(WAITING)
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime? @default(now()) @map("updated_at")

  picknUpAt  DateTime? @map("pickn_up_at")
  deliveryAt DateTime? @map("delivery_at")

  deliveryman User?    @relation(fields: [deliverymanId], references: [id])
  shipping    Shipping @relation(fields: [clientId], references: [id])

  attachments Attachment[]

  @@map("orders")
}

model Shipping {
  id                 String @id @default(uuid())
  clientName         String @map("client_name")
  clientCity         String @map("client_city")
  clientNeighborhood String @map("client_neighborhood")
  clientAddress      String @map("client_address")
  clientZipcode      Int    @map("client_zipcode")

  Order Order[]

  @@map("shippings")
}

model Attachment {
  id      String @id @default(uuid())
  title   String
  url     String
  orderId String @map("order_id")

  order Order @relation(fields: [orderId], references: [id])

  @@map("attachments")
}

model Notification {
  id          String    @id @default(uuid())
  recipientId String    @map("recipient_id")
  title       String
  readAt      DateTime? @map("read_at")
  createdAt   DateTime  @default(now()) @map("created_at")

  @@map("notifications")
}
